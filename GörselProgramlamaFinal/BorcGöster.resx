<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="button4.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAHhQTFRF////
        AAAAPz8/QkJCwcHBzc3NFBQUmpqaPT09MzMzOTk5GxsbJCQkMDAwHh4eKCgo7+/v9vb2CwsLt7e3FxcX
        EBAQ2tra5eXloKCgkpKSJiYmX19fWFhY8/PzZmZmf39/ioqKSkpKcnJyrKysUFBQycnJgYGBurq6evFT
        9gAABCNJREFUeF7t3MliqkAUBNA0ZHCIcYiZ5/n///ChFrdbtIXFW1DXOisDvanEQNE0nIiIiIiIiIiI
        iIiIiIiIiIiIiIiIiIiISB/NZvjg1WcIwzt8dqkMK34jzifrgCF4/abOxggYlnNs8uUO8VYm2ObKLcJt
        lNjqyBmi1b6x3Y1TBAvn5/jwij1OXCNWOC+KBT5+Yp8L9wgVxkVRDOqID9jrwDsihauySlgM8FO4wH56
        bwgULtcBi2KEn8MXRpB7RZwwRcAk4h/GUHtGmCRgUQ6xLZxhFLECUcIkBqwi1g11jGG05vbHGqYBq4hX
        2E5ewl/qHGHUCDjF9sDdwWPXHiEZlI/YTn5OjF17gGRQXmJ7eMNQTta1F82A9t3l/gta175BMLPEjnCP
        oZzSrr3tBjvCNYZy2uraKevd4RRDOT0gBbp2FAPeYiinT6Swrl2zQko+o2hd+7FxnvcS0Lr2VhWtAlqF
        m75gKKcPxNgJWLftMKKuajavvdO1bccHhnKa2ek827WfMJRTvms7qaLWtb1W0XzXtnsy3FW0Q9fmrqJf
        SHGga3NX0QukCOPtg2hSRbkn1tx37Z157ZpV0YWTrp1M+67Err3krqLfiJHv2kPuWcPNGpJKtmtzV9EO
        XZu7is7q29b5rj39Oe2lbncUOsxr91eX+5fZrl3YQabP2k/R2a6dXC71WeuFQL5rF4X9F/ZZ20oC69pL
        pErZeoQ+a0kY57W3D6IwsoNsfx1O2FhDsiuzuRfKza//YMJs16bQIWGua5NoT/i0HlBpVFEWrQntPEga
        sD1hfRjl/IpWWhP+rPdX3P4Ns/eXWLQnjIcar8fS5D5v4zYohy4JY6fJnfLLPuuSMD8HvDGyqe7+akno
        /9riCK4Pk/PijdNr/COYpzmCubb0mbvsfOnkrJ+63kqZW5LsnDf9Y1x2Ymjet7D/xRFG0mq/90S+zqvL
        /cMF+7O/2XmpWG24b3IfmFv0ch//wLrnuNjkB0NZ5dfTbK5UKtwLhjqtiWJ/4LDDMyTtZb7f8msT7Urj
        HUNZ5Xu4VTv2p9RnduDM9vBnDGU1txaT7eH0b4zIrh+ykjphf7XJvmebV5JFbuwl1SaLsxHpXzP0ixy7
        PdxNSbX1tF4XDHfq4dyLvg89Q3pMPZz74YsjeIAmiZh/CIq+h2dLqpN3KqTvxWiWVOvh7AUu9vBmSa2/
        qPwvGNz/zGy80MAwZvsWbcTLDAfvGNr7cL59d128J2pPD7eATt71tbNowyb62U8Vie1FG/XlxS/2uvCH
        UKuSWgd09d7EdNFGfWnB/SzUHrGkbnA/zbZXnCxeGWCrKzOEW5limzMvVtXO2ft2jvVw/rqdtVm04fed
        7JW3qti4Dlh9U53nExERERERERERERERERERERERERERERERERH5b05O/gHRVUsk+AX9fgAAAABJRU5E
        rkJggg==
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>